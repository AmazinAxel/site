.notextdeco {
	text-decoration: none;
}

.card {
	background-color: var(--darkest3);
	border: 2px var(--darkest4) solid;
	padding: 10px;
	border-radius: 0.5rem;
	box-shadow: 3px 3px 3px var(--darkest1);
	margin: 10px 0;
	text-align: center;
}

.flex.card {
	display: flex;
	align-items: center;
	flex-direction: column;
}

@media (max-width: 55rem) {
	.flex.card {
		flex-direction: column-reverse;
	}
	.menu-button {
		visibility: visible;
	}
}

.card img:not(.noImgStyle) {
	width: 50%;
}

.flex.card p {
	margin-bottom: 14px;
}

.contentFader {
	position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 10rem;
	background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0), var(--darkest3) 100%);
}

/* Homepage hero */
#hero {
	position: relative;
	text-align: center;
	height: 25rem;
	display: grid;
	align-items: end;
	align-content: center;
	background-size: cover;
	border-radius: 0.5rem;
	margin-bottom: 3rem;
	border: 3px solid #ffffff1c;
}

#hero::before {
	content: "";
	position: absolute;
	width: 100%; height: 100%;
	background-image: var(--heroBackground);
    background-size: cover;
	filter: blur(10px);
    z-index: -1;
    border-radius: 5px;
	transition: filter 0.5s var(--ease);
}

#hero.heroShow::before {
	filter: blur(0);
}

#hero h1, #hero p { 
	margin: 0;
	opacity: 1;
	transition: opacity .35s var(--ease);
}

#hero h1 { font-size: 3rem; }

#hero p {
	font-size: 15px;
    padding-bottom: 0.5rem;
}

#hero button {
	background: none;
	border: 0;
	cursor: pointer;
	position: absolute;
	right: 0;
	padding: 10px;
}

#hero.heroShow h1, #hero.heroShow p:not(.heroInfo p) {
	opacity: 0;
}

#hero button.heroClose {
    top: 0;
	z-index: 1;
}

#hero button:not(.heroClose) {
	bottom: 0;
}

.heroInfo {
	position: absolute;
	position: absolute;
    padding: 10px;
    position: absolute;
    padding: 10px;
    width: 20%;
    height: 100%;
    right: 0;
    align-content: center;
    background-color: var(--darkest4);
    box-shadow: -5px 0px 20px 1px var(--darkest4);
	color: var(--lightest1);
	text-shadow: white 0px 1px 1rem;
	border-radius: 0 4px 4px 0;
}

#hero h1,
#hero p:not(.heroInfo p) {
	color: var(--darkest1);
}

#hero.invertColors h1,
#hero.invertColors p {
	color: var(--lightest1)!important;
	text-shadow: white 0px 1px 20px;
}

#hero:not(.invertColors) img:not(.closeHeroImg) {
	filter: invert(50%) sepia(5%) saturate(2600%) hue-rotate(180deg) brightness(50%);
}

#hero a:hover { text-decoration: underline }

/* Checkbox styling */

input[type='checkbox'] {
	cursor: pointer;
	margin-left: 5px;
	box-shadow: 0 1px 3px 0 var(--darkest1);
}

/* The checkbox container */
.container {
	position: relative;
	padding-left: 35px;
	cursor: pointer;
	user-select: none;
}

/* Hide the browser's default checkbox */
.container input {
	position: absolute;
	opacity: 0;
	cursor: pointer;
	height: 0;
	width: 0;
}
/* Create a custom checkbox */
.container .checkmark {
	position: absolute;
	top: -10px;
	left: -8px;
	height: 40px;
	width: 40px;
	transition:
		background-color 0.3s,
		box-shadow 0.3s;
	border-radius: 10px;
	box-shadow: 0 1px 3px 0 var(--darkest4);
	background-color: var(--darkest3);
}
/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
	box-shadow: 0 0 10px 1px var(--darkest4);
}
.container input:checked ~ .checkmark:hover {
	box-shadow: 0 0 10px 1px var(--darkest4);
}
.container input:checked ~ .checkmark:active {
	background-color: var(--darkest2);
	box-shadow: 0 1px 3px 0 var(--darkest4);
}
.container:active input ~ .checkmark {
	background-color: var(--darkest4);
	box-shadow: 0 1px 3px 0 var(--darkest4);
}
.container input:checked ~ .checkmark {
	transition:
		background-color 0.3s,
		box-shadow 0.3s;
	border-radius: 10px;
	box-shadow: 0 1px 3px 0 var(--darkest1);
	background-color: var(--darkest4);
}
/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
	content: '';
	position: absolute;
	display: block;
	transition: transform .2s var(--ease), border-width .2s var(--ease), opacity .1s;
	opacity: 0;
	transform: rotate(0deg);
	border-width: 0;

	left: 10px;
	top: 10px;
	width: 20px;
	height: 20px;
	border-radius: 3px;
	border: solid var(--blue2);
	box-shadow:
		0 0 6px 0 var(--blue2),
		inset 0 0 3px 0 var(--blue2);
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
	border-width: 6px;
	transform: rotate(45deg);
	opacity: 1;
}

/* Progress bar styling */
.progress {
	margin-top: 10px;
	border-radius: 7px;
	background-color: var(--darkest3);
	box-shadow: 5px 3px 10px 0 var(--darkest2);
	transition:
		background-color 0.2s ease,
		box-shadow 0.2s ease;
}

.progressinner {
	font-size: 20px;
	border-radius: 7px;
	line-height: 35px;
	width: 5px;
	min-width: 50px;
	background-image: linear-gradient(240deg, var(--blue2) 0%, var(--blue3) 100%);
	box-shadow: 0 0 10px 0 var(--blue);
	color: white;
}

.progress::before {
	content: var(--language);
	float: right;
	margin-right: 10px;
	font-size: 20px;
	line-height: 35px;
	color: var(--progress);
	transition: color 0.2s ease;
}

/* Tooltips */

.tooltip {
	display: inline-block;
	border-bottom: 2px dotted var(--lightest1);
	position: relative;
    left: 0.25rem;
}

.tooltip .tooltiptext {
	opacity: 0;
	transition:
		opacity 0.1s ease,
		visibility 0.1s,
		transform 0.15s ease;
	padding: 10px;
	border-radius: 10px 7px 7px 10px;
	background-color: var(--darkest2);
	box-shadow:
		5px 4px 20px var(--darkest3),
		inset 11px 7px 20px 0px var(--darkest2),
		0px 20px 20px 5px inset var(--darkest1);
	width: 275px;
	position: absolute;
	left: 50%;
	top: -70px;
	transform: translate(-50%, -40%);
	overflow: auto;
	text-align: center;
	visibility: hidden;
	cursor: text;
	max-height: 150px;
	color: var(--lightest1);
	line-height: 1.2;
	font-size: 1em;
	border-top: 8px solid var(--blue2);
    z-index: 3;
}

.tooltiptext::-webkit-scrollbar-thumb {
	border-radius: 0 5px 5px 0;
}
.tooltip:hover .tooltiptext,
.tooltip:active .tooltiptext {
	opacity: 1;
	visibility: visible;
	transform: translate(-50%, -50%);
}
.tooltip:hover {
	cursor: pointer;
}
.full.tooltip {
	position: relative;
	display: revert;
	border-bottom: none;
}
.full.tooltip .tooltiptext {
	max-height: unset;
	width: 100%;
}

.tooltiptext::before {
    content: 'â—†';
    padding-right: 0.4rem;
    position: relative;
    bottom: 0.25rem;
    font-size: 0.8rem;
    color: var(--blue2);
}

.tooltiptext img { box-shadow: -1px -1px 6px var(--darkest1); }

/* Inputs */
textarea {
	resize: none;
	background: var(--darkest2);
	border: 5px solid var(--darkest4);
	box-shadow: 1px 1px 9px var(--darkest2);
	border-radius: 5px;
}
textarea:focus-visible, input:focus-visible {
	outline: 3px solid var(--blue2);
}

::placeholder {
	color: #cdcdcd;
}

/* Stacked cards list */
.cardListContainer {
    display: flex;
    overflow-y: clip;
    padding-top: 15px;
    padding-left: 5px;
    max-height: 20rem;
    flex-wrap: wrap;
    overflow-x: auto;
}

@media(min-width: 1000px) {
	.cardListContainer {
		padding-right: 5rem;
	}
}

.listCard {
	height: 280px;
	width: 200px;
	transition: transform 0.2s var(--ease), left 0.2s var(--ease);
	position: relative;
	transform: translateY(0px);
	left: 0px;
	overflow: hidden;
	box-shadow: 0px -17px 20px 0px inset var(--darkest2);
}

.listCard h4 {
	font-size: 1rem;
}

.backgroundIcon::after {
	content: "";
    height: 50px;
    width: 50px;
    position: absolute;
    z-index: -1;
    left: 0.5rem;
    background-size: cover;
    top: 0.5rem;
    transform: rotateZ(-10deg);
    display: inline-block;
    background-image: var(--bg);
    filter: invert(50%) sepia(5%) saturate(2000%) hue-rotate(180deg) brightness(87%) blur(1px);
}

.coverCard.innerCard {
	text-align: center; 
	position: relative;
}

.coverCard::after {
	content: "";
    height: var(--size);
    width: var(--size);
    position: absolute;
    z-index: 1;
    left: calc(var(--size) / 4 * -1);
    background-size: cover;
    top: calc(var(--size) / 4 * -1);
    transform: rotateZ(-10deg);
    display: inline-block;
    background-image: var(--bg);
    filter: invert(50%) sepia(5%) saturate(2000%) hue-rotate(180deg) brightness(87%) blur(1px);
}

.innerCard * {
    z-index: 2;
    position: inherit;
}

.listCard p {
	font-size: 0.9rem;
}

.listCard.elipsis::after {
	content: '';
}

.listCard:not(:first-child) {
	margin-left: -100px;
}

.listCard:hover {
	transform: translateY(-20px) rotate(-2deg);
	transition: 0.4s var(--ease);
}

.listCard:hover ~ .listCard {
	position: relative;
	left: 75px;
	transition: 0.2s var(--ease);
}

.listCard:active {
    transform: translateY(-5px) rotate(-1deg);
}

a:hover {
	text-decoration: underline;
	text-decoration-color: var(--blue1);
}

/* Image cards */
.imgCard {
	position: relative;
    overflow: hidden;
}

/* Image card for homepage */
.section .imgCard { max-height: 17.5rem; }
.imgCard h3 { white-space: nowrap; }

.imgCard img {
	margin: -10px;
    width: calc(100% + 20px);
    max-width: calc(100% + 20px);
    height: 100%;
}

.imgCard picture { position: relative }
.imgCard picture::after {
    content: '';
    position: absolute;
    right: -10px;
    bottom: 0;
    width: 300%;
    height: 10rem;
    background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0), var(--darkest3) 100%);
}
/* Popups */

.popupBg {
    z-index: 10;
    position: fixed;
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
    background: var(--darkest4);
    opacity: 0.8;
}

.popup {
	transform: translate(-50%, -50%);
    height: 30rem;
    width: 750px;
    position: fixed;
    left: 50%;
    top: 50%;
	z-index: 11;
    overflow-y: scroll;
}

.popup img { margin: auto; }

/* Buttons */
button:not(.nostyle) {
    background-image: linear-gradient(220deg, var(--blue2) 0%, var(--blue3) 100%);
    border-radius: 5px;
    box-shadow: 0 0 10px 0 var(--blue2);
    padding: 10px;
    color: white;
    cursor: pointer; /* For <button> elements */
    text-decoration: none;
    transition: scale .3s cubic-bezier(0, 1.4, 0.5, 1.3), box-shadow .15s ease;
	border: 0; 
	min-width: 15%;
	margin: 5px;
}
button:not(.nostyle):hover { scale: 1.02; box-shadow: 0 0 10px 3px var(--blue2); }
button:not(.nostyle):active { scale: 0.98; }

/* codeblocks */
pre, :not(pre) > code { /* Applied to small & large codeblocks */
    background-color: var(--darkest2);
    padding: 1px 5px 2px 5px;
    border-radius: 5px;
    border: 2px solid var(--darkest4);
    color: var(--lightest1);
    line-height: 23px;
    transition: color .2s ease, background-color .2s ease, border .2s ease, box-shadow .2s ease;
}

pre { /* Applied only to large codeblocks */
    padding: 10px 8px 10px 8px;
    text-align: left;
    box-shadow: 3px 6px 14px var(--darkest1);
    margin-bottom: 10px;
}

/* Inner card */

.innerCard { 
    padding: 20px;
    background-color: var(--darkest2);
    border-radius: 5px;
    border: 3px solid var(--darkest4);
    text-align: left;
    margin-top: 15px;
    transition: background-color .2s ease, border .2s ease, box-shadow .2s ease;
    overflow: hidden;
}

.innerCard p:last-child { margin-bottom: 0; }

/* Forms */

input:not([type=range]), textarea {
    padding: 10px;
    background-color: var(--darkest3);
    border-radius: 5px;
	border: 0;
    margin: 10px;
    transition: background-color .2s ease, box-shadow .2s ease, color .2s ease;
    max-width: -webkit-fill-available;
    max-height: 400px;
    color: var(--complimentary);
	box-shadow: 0 0 10px var(--darkest3);
}

textarea { min-width: 200px; min-height: 100px; }

label.heavy {
    display: block;
    font-weight: bold;
    font-size: 20px;
}

.animateIn { animation: reveal 0.7s cubic-bezier(0.4, 0, 0.2, 1.1); }
.animateOut { animation: reveal reverse .5s cubic-bezier(1, 0, 1, 1); }

@keyframes reveal {
    0% { max-height: 0; opacity: 0; margin-bottom: 0; padding: 0; }
    100% { max-height: 500px; opacity: 1; margin-bottom: 15px; padding: 10px; }
}

label { color: var(--complimentary); transition: color .2s ease; }

/* Sticky admonitions */
.stickyAdmonition {
    display: flex;
	position: fixed;
    right: 1rem;
    z-index: 5;
    bottom: 1rem;
    background: var(--green);
    padding: 0.5rem;
    border-radius: 0.2rem;
    box-shadow: 0px 0px 20px 0px var(--green);
}

.stickyAdmonition::before {
	content: url(/media/icons/check.svg);
    margin-right: 4px;
    height: 0;
}

/* Subtext */
sub { color: var(--blue1); }
sub a { color: var(--blue2)!important; }

/* Admonitions */
.error {
	background-color: var(--red);
	border: 3px solid #cf7f87;
    box-shadow: 0 0 2rem 0 var(--red);
}

.warning {
	background-color: var(--orange);
	border: 3px solid #d9a393;
    box-shadow: 0 0 2rem 0 var(--orange);
}

.important {
	background-color: var(--blue3);
	border: 3px solid var(--blue2);
    box-shadow: 0 0 2rem 0 var(--blue3);
}

.note {
    background-color: var(--blue2);
    border: 3px solid var(--blue1);
	box-shadow: 0 0 2rem 0 var(--blue2);
}

.info {
	background-color: var(--darkest1);
	border: 3px solid var(--darkest2);
	box-shadow: 0 0 2rem 0 var(--darkest2);
}

.error.coverCard::after, .warning.coverCard::after, .important.coverCard::after, .note.coverCard::after, .info.coverCard::after {
	opacity: 0.3;
	filter: blur(2px);
}

/* Github cards */
.githubCard {
	display: flex; 
	gap: 0.5rem; 
	flex-wrap: wrap; 
	justify-content: space-evenly
}

.githubCard div {
	display: flex; 
	align-items: center; 
	gap: 0.5rem;
}

.githubCard h4 {
	position: relative; 
	top: 2px;
}

/* Used as subtext */
.innerCard h5 {
	font-size: 1rem; 
	margin-top: -0.75rem;
}